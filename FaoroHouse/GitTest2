#!/bin/bash

#	Tag head of master branch with timestamp
#	Create file called taglog
#		Output all of the tags in the repo
#		Sort reverse alphabetical order
#		Insert new tag at the end of the file
#		
#	Take this script and put in a Jenkins job
#	Run the job
#	You should be able to send in a var




#Variables

        DATE=$(date +'%m/%d/%y') #Define DATE
	TIME=$(date +'%H.%M.%S') #Define TIME
	TAGNAME="$USER-$DATE" #Define TAGNAME


#Executables
	
	git pull origin	     #Get up-to-date with all new tags and commits


	
	if grep -q "$TAGNAME" taglog	    #Checks if $TAGNAME exists without outputting the findings
	
	then
		git tag -d $TAGNAME     #Delete tag if it already exists
		
		git push origin :refs/tags/$TAGNAME     #Delete tag remotely on GitHub
				
		git tag $TAGNAME	#Tag new tag with same name	
	else
		
		git tag $TAGNAME     #Tag the HEAD if there is not a tag with the same name already

	fi



	git tag | sort -r > taglog      #List tags in reverse alphabetical order in file: taglog
	
	echo "$TAGNAME" >> taglog     #Put a copy of the tag at end of the file: taglog

	git add .     #Stage your commit
	
	git commit -m      "You just tagged $TAGNAME"

	git push --tags     #Push tags to remote repo

	git push origin master     #Push local changes to remote repo

        echo -e "\nYou have recorded a tag named: $TAGNAME\n\n" #Confirm the tag





#	git tag -d 12345	#delete tag 12345 from local repository
#	git push origin :refs/tags/12345	#delete tag 12345 from the remote repository

#	sed '$ TAGNAME' taglog
#	sed -i '' -e '$TAGNAME\' taglog
